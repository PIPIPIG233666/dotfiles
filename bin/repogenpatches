#!/usr/bin/env bash

curdir=${PWD}
curdirname=${PWD##*/};
filter_projects=${1};
patcherdir=$curdir/patcher;
repolistfile=$patcherdir/repositories.txt


if [[ ! -d $patcherdir ]]; then
    echo -e "\nSetup patcher dir with working script"
    exit 1
fi

# Diff execution
echo '';
echo -n ' Scanning...';

# Clear repolistfile & patches
if [[ -z $filter_projects ]]; then
    truncate -s 0 $repolistfile
    rm -rf $patcherdir/patches
fi

repo forall -j"$(expr $(grep -c ^processor /proc/cpuinfo) \* 3)" -c "
    # Filter out projects
    if [ ! -z \"${filter_projects}\" ] && ! echo \"\${REPO_PATH}\" | grep -iq \"${filter_projects}\"; then
        printf \"\r\033[K Ignoring \${REPO_PROJECT} [\${REPO_REMOTE}/\${REPO_RREV##*/}] \";
    else
        # Skip android_patcher project if present
        if [ \"\${REPO_PATH}\" = \"patcher\" ]; then
            echo '';
            printf \"\r\033[K Ignoring patches for \${REPO_PATH}\";
            echo '';
            exit;
        fi;

        # Show and fetch projects
        printf \"\r\033[K Scanning \${REPO_PROJECT} [\${REPO_REMOTE}/\${REPO_RREV##*/}] \";
        git fetch --quiet \${REPO_REMOTE} \${REPO_RREV##*/};

        # Detect local commits
        changescount=\$(git rev-list --left-right HEAD...FETCH_HEAD | grep '^<' | wc -l);
        if [ \${changescount} -ne 0 ]; then

            # Add repo patch to repositories.txt
            if [ -z \"${filter_projects}\" ]; then
                echo \"\${REPO_PATH}\" >> \"${repolistfile}\";
            fi;

            # Generate patches
            git format-patch HEAD...FETCH_HEAD > /dev/null;

            # Delete and make dir
            if [ -d \"${patcherdir}\"/patches/\${REPO_PATH} ]; then
                rm -rf \"${patcherdir}\"/patches/\${REPO_PATH};
            fi;
            mkdir -p \"${patcherdir}\"/patches/\${REPO_PATH};

            # Move the patches to patcher
            for file in \$(find ${curdir}/\${REPO_PATH} -maxdepth 1 -iname '*.patch'); do
                mv \$file \"${patcherdir}\"/patches/\${REPO_PATH};
            done;
            echo '';
            printf \"\r\033[K Generated patches for \${changescount} local changes in \${REPO_PATH}\";
            echo '';
        fi;

        # Detect local differences
        if [ \$(git diff --quiet; echo \${?}) -ne 0 ]; then
            printf \"\n\n [Project \${REPO_PROJECT}] Unmerged differences\";
            echo '';
            echo -e \"\r\033[K\e[1;31m Warning: Ignoring uncommitted changes...\e[0m\";
            git --no-pager diff;
        fi;
    fi;
";
#" 2> /dev/null;

# Delete empty dirs
find $patcherdir -empty -type d -delete

# Done
echo '';
echo '';
