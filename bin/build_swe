#!/usr/bin/env zsh

caf_version="m52"
clean=0
gsync=0

usage() {
    echo "Usage:"
    echo "  build_swe [ options ]"
    echo
    echo "  Options:"
    echo "    -a <args> Sync args"
    echo "    -c Clean"
    echo "    -h Show this message"
    echo "    -r <release> Specify chromium release"
    echo "    -s Sync"
    echo
    echo "  Example:"
    echo "    build_swe -c -s -a \"-R\" -r $caf_version"
    echo
    exit 1
}

while getopts ":a:chr:s" opt; do
    case $opt in
        a) sync_args="$OPTARG" ;;
        c) clean=1 ;;
        h) usage ;;
        r) caf_version="$OPTARG" ;;
        s) gsync=1 ;;
        :)
          echo "Option -$OPTARG requires an argument"
          echo
          usage
          ;;
        \?)
          echo "Invalid option: -$OPTARG"
          echo
          usage
          ;;
    esac
done
shift $((OPTIND-1))

# Add depot_tools to PATH
if [ ! -d depot_tools ]; then
    git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git --depth 1
fi
export PATH="$(pwd -P)/depot_tools:$PATH"

# Switch to python2
. $HOME/android/venv/bin/activate

# Sync chromium
export GYP_CHROMIUM_NO_ACTION=1
[ $gsync -eq 1 ] && yes | gclient sync --with_branch_heads $sync_args -r refs/remotes/origin/$caf_version
cd src

# Fix build error
rm -rf swe/channels/cm
git checkout refs/remotes/origin/$caf_version chrome/browser/resources/safe_browsing/gen_file_type_proto.py
cat <<EOF | patch -p1
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java
index d111d42..0bbcb49 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java
@@ -10,10 +10,8 @@ import android.support.v7.widget.RecyclerView;
 import android.support.v7.widget.RecyclerView.ViewHolder;
 import android.view.ViewGroup;

-import org.chromium.base.CommandLine;
 import org.chromium.base.ContextUtils;
 import org.chromium.base.metrics.RecordUserAction;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.browser.signin.SigninAccessPoint;
 import org.chromium.chrome.browser.signin.SigninAndSyncView;
 import org.chromium.chrome.browser.signin.SigninManager;
@@ -132,9 +130,7 @@ class BookmarkPromoHeader implements AndroidSyncSettingsObserver,
                 && mSignInManager.isSignInAllowed()
                 && !wasSigninPromoDeclined()
                 && ContextUtils.getAppSharedPreferences().getInt(
-                        PREF_SIGNIN_PROMO_SHOW_COUNT, 0) < MAX_SIGNIN_PROMO_SHOW_COUNT
-                && CommandLine.getInstance()
-                .hasSwitch(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES);
+                        PREF_SIGNIN_PROMO_SHOW_COUNT, 0) < MAX_SIGNIN_PROMO_SHOW_COUNT;
         if (oldIsShowing != mShouldShow && notifyUI) {
             mShowingChangeListener.onPromoHeaderShowingChanged(mShouldShow);
         }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java b/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java
index b603a76..eacdc31 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java
@@ -21,10 +21,8 @@ import android.widget.BaseExpandableListAdapter;
 import android.widget.TextView;

 import org.chromium.base.ApiCompatibilityUtils;
-import org.chromium.base.CommandLine;
 import org.chromium.base.metrics.RecordUserAction;
 import org.chromium.chrome.R;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.browser.favicon.FaviconHelper.FaviconImageCallback;
 import org.chromium.chrome.browser.ntp.ForeignSessionHelper.ForeignSession;
 import org.chromium.chrome.browser.ntp.ForeignSessionHelper.ForeignSessionTab;
@@ -828,15 +826,11 @@ public class RecentTabsRowAdapter extends BaseExpandableListAdapter {
             addGroup(new CurrentlyOpenTabsGroup(tabList));
         }
         addGroup(mRecentlyClosedTabsGroup);
-        if (CommandLine.getInstance()
-                .hasSwitch(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)) {
-
-            for (ForeignSession session : mRecentTabsManager.getForeignSessions()) {
-                addGroup(new ForeignSessionGroup(session));
-            }
-            if (mRecentTabsManager.shouldDisplaySyncPromo()) {
-                addGroup(new SyncPromoGroup());
-            }
+        for (ForeignSession session : mRecentTabsManager.getForeignSessions()) {
+            addGroup(new ForeignSessionGroup(session));
+        }
+        if (mRecentTabsManager.shouldDisplaySyncPromo()) {
+            addGroup(new SyncPromoGroup());
         }

         // Add separator line after the recently closed tabs group.
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/preferences/MainPreferences.java b/chrome/android/java/src/org/chromium/chrome/browser/preferences/MainPreferences.java
index f98f845..3c02905 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/preferences/MainPreferences.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/preferences/MainPreferences.java
@@ -12,7 +12,6 @@ import android.preference.PreferenceFragment;
 
 import org.chromium.base.CommandLine;
 import org.chromium.chrome.R;
-import org.chromium.chrome.browser.ChromeSwitches;
 import org.chromium.chrome.browser.PasswordUIView;
 import org.chromium.chrome.browser.autofill.PersonalDataManager;
 import org.chromium.chrome.browser.net.spdyproxy.DataReductionProxySettings;
@@ -145,13 +144,8 @@ public class MainPreferences extends PreferenceFragment implements SignInStateOb

     private void setupSignInPref() {
         mSignInPreference = (SignInPreference) findPreference(PREF_SIGN_IN);
-        if (!CommandLine.getInstance()
-                .hasSwitch(ChromeSwitches.ENABLE_SUPPRESSED_CHROMIUM_FEATURES)) {
-            getPreferenceScreen().removePreference(mSignInPreference);
-        } else {
-            mSignInPreference.registerForUpdates();
-            mSignInPreference.setEnabled(true);
-        }
+        mSignInPreference.registerForUpdates();
+        mSignInPreference.setEnabled(true);
     }

     private void clearSignInPref() {
diff --git a/chrome/browser/resources/safe_browsing/gen_file_type_proto.py b/chrome/browser/resources/safe_browsing/gen_file_type_proto.py
index 1e55f9a..edeeef2 100755
--- a/chrome/browser/resources/safe_browsing/gen_file_type_proto.py
+++ b/chrome/browser/resources/safe_browsing/gen_file_type_proto.py
@@ -173,7 +173,7 @@ def main():

   if opts.wrap:
     # Run this script again with different args to the interpreter.
-    command = [sys.executable, '-S', '-s', sys.argv[0]]
+    command = [sys.executable, '-s', sys.argv[0]]
     command += ['-t', opts.type]
     command += ['-i', opts.infile]
     command += ['-o', opts.outfile]
diff --git a/swe/channels/cm/branding/BRANDING b/swe/channels/cm/branding/BRANDING
new file mode 100644
index 0000000..a8d0ac4
--- /dev/null
+++ b/swe/channels/cm/branding/BRANDING
@@ -0,0 +1,8 @@
+COMPANY_FULLNAME=The Linux Foundation
+COMPANY_SHORTNAME=The Linux Foundation
+PRODUCT_FULLNAME=Snapdragon Browser
+PRODUCT_SHORTNAME=Browser
+PRODUCT_INSTALLER_FULLNAME=Snapdragon Installer
+PRODUCT_INSTALLER_SHORTNAME=Snapdragon Installer
+COPYRIGHT=Copyright (c) 2015 The Linux Foundation. All rights reserved.
+PACKAGE_NAME=org.codeaurora.swe.browser.dev
diff --git a/swe/channels/cm/res/raw/web_refiner_conf b/swe/channels/cm/res/raw/web_refiner_conf
new file mode 100644
index 0000000..4937afe
--- /dev/null
+++ b/swe/channels/cm/res/raw/web_refiner_conf
@@ -0,0 +1,48 @@
+{
+  "version": "1.0",
+  "update": {},
+  "subscriptions": [
+    {
+      "name"            : "Malware Domains Filter",
+      "category"        : "MALWARE_DOMAINS",
+      "format"          : "WebRefiner 1.0",
+      "url"             : "https://easylist-downloads.adblockplus.org/exceptionrules.txt",
+      "expiration"      : "2 days"
+    },
+    {
+      "name"            : "Privacy Filter",
+      "category"        : "TRACKERS",
+      "format"          : "WebRefiner 1.0",
+      "url"             : "none",
+      "expiration"      : "2 days"
+    },
+    {
+      "name"            : "Ad Filter",
+      "category"        : "ADS",
+      "format"          : "WebRefiner 1.0",
+      "url"             : "https://easylist-downloads.adblockplus.org/easylist_noelemhide.txt",
+      "expiration"      : "2 days"
+    },
+    {
+      "name"            : "Anti Adblock Filter",
+      "category"        : "ADS",
+      "format"          : "WebRefiner 1.0",
+      "url"             : "https://easylist-downloads.adblockplus.org/antiadblockfilters.txt",
+      "expiration"      : "5 days"
+    },
+    {
+      "name"            : "Adware Filter",
+      "category"        : "ADS",
+      "format"          : "WebRefiner 1.0",
+      "url"             : "https://easylist-downloads.adblockplus.org/adwarefilters.txt",
+      "expiration"      : "5 days"
+    },
+    {
+      "name"            : "Regional Ad Filter",
+      "category"        : "ADS",
+      "format"          : "WebRefiner 1.0",
+      "url"             : "https://easylist-downloads.adblockplus.org/bitblock.txt",
+      "expiration"      : "5 days"
+    }
+  ]
+}
diff --git a/swe/channels/cm/res/values/strings.xml b/swe/channels/cm/res/values/strings.xml
new file mode 100644
index 0000000..18beb6c
--- /dev/null
+++ b/swe/channels/cm/res/values/strings.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2010 The Android Open Source Project
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+          http://www.apache.org/licenses/LICENSE-2.0
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources>
+    <!-- Download Enhancements -->
+    <string name="swe_downloadpath_activity_intent" translateable="false">enabled</string>
+    <string name="swe_downloadpath_activity_result_selection" translatable="false">enabled</string>
+
+    <!-- Enable WiFi -->
+    <bool name="swe_feature_network_notifier">true</bool>
+    <string name="swe_def_action_wifi_selection_data_connections" translatable="false">enabled</string>
+    <string name="swe_def_intent_pick_network" translatable="false">enabled</string>
+
+    <!-- Exit Dialoig -->
+    <bool name="swe_feature_exit_dialog">true</bool>
+
+    <!-- Media Download -->
+    <bool name="swe_feature_allow_media_downloads">true</bool>
+</resources>
EOF

# Build args
args='target_os="android" is_official_build=true is_debug=false is_component_build=false symbol_level=0 enable_nacl=false remove_webcore_debug_symbols=true'
args+=' swe_channels="cm"'
if [ "$USE_CCACHE" -eq 1 ]; then
    export CCACHE_CPP2=yes
    export CCACHE_SLOPPINESS=time_macros
    args+=' cc_wrapper="ccache"'
fi
args+=' target_cpu="arm" is_clang=true'

# Setup environment
[ "$clean" -eq 1 ] && rm -rf out
. build/android/envsetup.sh

# Build
gn gen out/Default --args=$args
ninja -C out/Default swe_browser_apk
